0000                             ; TEC Invaders Mark 2.
0000                             ; 
0000                             ; By
0000                             ; Brian Chiha -- May 2020
0000                             ; brian.chiha@gmail.com
0000                             ; 
0000                             ; This is my version of the TEC invaders that was originally writen by Cameron Sheppard
0000                             ; -------------------------------------------------------------------------------------
0000                             ; 
0000                             ; Setup
0000                             ; -----
0000                             ; 
0000                             ; To be run on the TEC-1D with either JMON or MON2.  For the keyboard to work
0000                             ; it requires EITHER a 4k7 resistor between the NMI (pin 17 on Z-80) and D6 (pin
0000                             ; 10 on the Z-80) OR the DAT (LCD) expanstion board fitted to port 3.  The
0000                             ; current TEC-1D boards have the JMON MOD resitor connection already there.
0000                             ; The 8x8 LED board is fitted to ports 5 and 6 with the port select strobe of the
0000                             ; left hand latch going to port 6.
0000                             ; 
0000                             ; To Play
0000                             ; -------
0000                             ; 
0000                             ; Use "1" to move Left, "9" to move right and "+" to shoot.  10 Points for
0000                             ; hitting an invader and 50 Points for the UFO on the top row.  Player has
0000                             ; 3 lives and the game is over when all lives are lost.  You lose a life if
0000                             ; the invaders land or you get hit by one of their bombs.  Invaders come
0000                             ; in waves and get faster with less invaders alive.
0000                             ; 
0000                             ; 
0000                             ;Data locations
0000                SCREEN:   EQU   3000H   ;Game Screen (Merge of INVADV,PLAYER,BULLET,UFOPOS and INVBOM) (8-bytes)
0000                INVADV:   EQU   3008H   ;Invaders in vertical position for display             (8-bytes)
0000                INVADH:   EQU   3010H   ;Invaders in horizontal position for easy bit move     (8-bytes)
0000                INVBOM:   EQU   3018H   ;Invader Bomb position vertically.                     (8-bytes)
0000                PLAYER:   EQU   3020H   ;Position in byte IE: 00010000 (three from the right)  (1-byte)
0000                BULLET:   EQU   3021H   ;Position of bullet X (Horizontal) and Y (Verticallly) (2-bytes)
0000                UFOPOS:   EQU   3023H   ;Position in byte IE: 00010000 (four from the right)   (1-byte)
0000                KEYPRE:   EQU   3024H   ;Key Pressed Flag, 00-False, FF-True                   (1-byte)
0000                INVDIR:   EQU   3025H   ;Direction of Invaders, 00=Right, 01=Left              (1-byte)
0000                PLAYSC:   EQU   3026H   ;Player current score                                  (2-bytes)
0000                PLAYLV:   EQU   3028H   ;Player current Lives                                  (1-byte)
0000                INVCNT:   EQU   3029H   ;Counter to action invader movement when it hits zero  (1-byte)
0000                LEDSCR:   EQU   302AH   ;Score and lives segment data for LED display          (6-bytes)
0000                RANDNO:   EQU   3030H   ;Random 8-Bit Number. Set when RANDOM is called        (1-byte)
0000                INVSPD:   EQU   3031H   ;Current speed of invaders                             (1-byte)
0000                INVREM:   EQU   3032H   ;Number of remaining invaders                          (1-byte)
0000                             ;Contstants
0000                INITPL:   EQU   00010000B   ;Initial Player X position, bit set = ...0....
0000                INITLV:   EQU   03H   ;Initial Lives #3
0000                UFOSPD:   EQU   00000111B   ;UFO movement speed, every 7 loops
0000                UFOCRE:   EQU   06H   ;UFO creation rate
0000                BOMCRE:   EQU   10H   ;Bomb creation rate
0000                KEYBOARD:   EQU   0x00   ;KEYBOARD ENCODER
0000                DSCAN:    EQU   0x01   ;DISPLAY CATHODE DRIVER LATCH
0000                DSEGMENT:   EQU   0x02   ;DISPLAY SEGMENT DRIVER LATCH
0000                KEYPRESS:   EQU   0x03   ;KEYBOARD PRESS
0000                LEDROW:   EQU   0x06   ;8x8 LCD ROW Port
0000                LEDCOL:   EQU   0x05   ;8x8 LCD COLUMN Port
F000                          .ORG   0F000H   
F000                START:       
F000                             ;Welcome Screen
F000   CD 50 F3               CALL   CLRSCR   
F003   CD E3 F2               CALL   INTROM   
F006                             ;New game setup
F006   CD F4 F1               CALL   SETUP   
F009                             ;Game Loop
F009                GAME:        
F009   CD C2 F2               CALL   RANDOM   ;Get random number, Store in RANDNO
F00C   CD CB F0               CALL   MOVPLA   ;Move Player
F00F   CD 12 F1               CALL   MOVBUL   ;Move Bullet
F012   CD D2 F1               CALL   CHKINV   ;Reset invaders if all invaders are dead
F015                             ; Delayed timed movement for invaders, bombs, ufo and ufo creation
F015                             ; Move Invaders
F015                             ; Create Bombs
F015   3A 30 30               LD   A,(RANDNO)   
F018   FE 10                  CP   BOMCRE   
F01A   30 03                  JR   NC,SKIPBM   
F01C   CD A9 F1               CALL   CREBOM   
F01F                SKIPBM:      
F01F                             ; Move Invaders
F01F   3A 29 30               LD   A,(INVCNT)   ;Get invader counter
F022   47                     LD   B,A   
F023   3D                     DEC   A   
F024   20 06                  JR   NZ,SKIPMV   ;Not Zero so don't move
F026   CD 47 F1               CALL   MOVINV   ;Move Invaders
F029   3A 31 30               LD   A,(INVSPD)   ;Reset invader counter
F02C                SKIPMV:      
F02C   32 29 30               LD   (INVCNT),A   ;Save counter
F02F                             ; Move UFO
F02F   78                     LD   A,B   
F030   E6 07                  AND   UFOSPD   ;Move UFO at faster rate
F032   FE 07                  CP   UFOSPD   
F034   20 06                  JR   NZ,SKIPUM   
F036   CD 3C F1               CALL   MOVUFO   ;Move UFO
F039   CD 27 F1               CALL   MOVBOM   ;Move Bomb
F03C                SKIPUM:      
F03C                             ; Create UFO
F03C   3A 30 30               LD   A,(RANDNO)   
F03F   FE 06                  CP   UFOCRE   
F041   30 0B                  JR   NC,SKIPUC   
F043   3A 23 30               LD   A,(UFOPOS)   ;Active if any bit set
F046   B7                     OR   A   
F047   20 05                  JR   NZ,SKIPUC   
F049   3E 01                  LD   A,01H   
F04B   32 23 30               LD   (UFOPOS),A   ;Create UFO
F04E                SKIPUC:      
F04E                             ; Display Updates
F04E   CD 62 F0               CALL   UPDSCR   ;Update Screen
F051   CD B6 F0               CALL   UPDSCO   ;Update Score
F054   CD 94 F2               CALL   SCAN   ;Scan the 8x8 and Seven Segments
F057                             ;Check if lives = 0, then display game over and restart
F057   3A 28 30               LD   A,(PLAYLV)   
F05A   B7                     OR   A   
F05B   20 AC                  JR   NZ,GAME   ;Still alive then just goto the game loop
F05D   CD 04 F3               CALL   GAMEOV   ;Call game over routine
F060   18 9E                  JR   START   
F062                             ;Update Screen by merging all displays
F062                UPDSCR:      
F062                             ;Place Invaders
F062   01 08 00               LD   BC,0008H   
F065   11 00 30               LD   DE,SCREEN   
F068   21 08 30               LD   HL,INVADV   
F06B   ED B0                  LDIR      
F06D                             ;Place Bombs
F06D   06 08                  LD   B,08H   
F06F   11 00 30               LD   DE,SCREEN   
F072   21 18 30               LD   HL,INVBOM   
F075                U1:          
F075   1A                     LD   A,(DE)   
F076   B6                     OR   (HL)   ;Add Bomb if any to vertical
F077   12                     LD   (DE),A   ;Update DE with Bomb
F078   13                     INC   DE   
F079   23                     INC   HL   
F07A   10 F9                  DJNZ   U1   
F07C                             ;Place Bullet.  Move HL to X pos, then OR with vertical
F07C   3A 21 30               LD   A,(BULLET)   
F07F   B7                     OR   A   
F080   28 10                  JR   Z,U4   ;No bullet so ignore update
F082   11 00 30               LD   DE,SCREEN   
F085                U2:          
F085   07                     RLCA      ;Bit must be present
F086   38 03                  JR   C,U3   ;Move DE to X position
F088   13                     INC   DE   
F089   18 FA                  JR   U2   
F08B                U3:          
F08B   3A 22 30               LD   A,(BULLET+1)   
F08E   47                     LD   B,A   
F08F   1A                     LD   A,(DE)   
F090   B0                     OR   B   
F091   12                     LD   (DE),A   ;Update DE with Y position
F092                U4:          
F092                             ;Place Player
F092   3A 20 30               LD   A,(PLAYER)   
F095   11 00 30               LD   DE,SCREEN   
F098                U5:          
F098   07                     RLCA      
F099   38 03                  JR   C,U6   
F09B   13                     INC   DE   
F09C   18 FA                  JR   U5   
F09E                U6:          
F09E   1A                     LD   A,(DE)   
F09F   CB C7                  SET   0,A   
F0A1   12                     LD   (DE),A   
F0A2                             ;Place UFO
F0A2   3A 23 30               LD   A,(UFOPOS)   
F0A5   B7                     OR   A   
F0A6   28 0D                  JR   Z,U9   ;Doesn't exist to skip drawing it
F0A8   11 00 30               LD   DE,SCREEN   
F0AB                U7:          
F0AB   07                     RLCA      
F0AC   38 03                  JR   C,U8   
F0AE   13                     INC   DE   
F0AF   18 FA                  JR   U7   
F0B1                U8:          
F0B1   1A                     LD   A,(DE)   
F0B2   CB FF                  SET   7,A   
F0B4   12                     LD   (DE),A   
F0B5                U9:          
F0B5   C9                     RET      
F0B6                             ;Update the LED's to display the LEDSCR buffer based off PLAYSC & PLAYLV
F0B6                             ;Unfortunately I had to hard code this as AF,BC,HL and DE all get used... :(
F0B6                UPDSCO:      
F0B6   01 2A 30               LD   BC,LEDSCR   ;Location of screen buffer
F0B9   21 26 30               LD   HL,PLAYSC   ;Player Score (2) and Lives (1)
F0BC   7E                     LD   A,(HL)   
F0BD   CD CF F2               CALL   SEGCON   ;Convert A to Segment Hex, Store in BC
F0C0   23                     INC   HL   
F0C1   7E                     LD   A,(HL)   
F0C2   CD CF F2               CALL   SEGCON   ;Convert A to Segment Hex, Store in BC
F0C5   23                     INC   HL   
F0C6   7E                     LD   A,(HL)   
F0C7   CD CF F2               CALL   SEGCON   ;Convert A to Segment Hex, Store in BC
F0CA   C9                     RET      
F0CB                             ; Check for key pressed: Either
F0CB                             ; "+" For Shoot
F0CB                             ; "1" For Left and "9" for Right,
F0CB                             ; Then Either create a bullet or move the player
F0CB                             ; Need DAT board or 4K7 Resistor mod from NMI to D6 link
F0CB                             ; 
F0CB                MOVPLA:      
F0CB                             ; Test for key pressed with D6 set
F0CB   DB 03                  IN   A,(KEYPRESS)   
F0CD   CB 77                  BIT   6,A   ; Bit 6, If not set A=NZ
F0CF   28 05                  JR   Z,MP2   
F0D1                             ; Store 0 for last key if no key pressed
F0D1   AF                     XOR   A   
F0D2   32 24 30               LD   (KEYPRE),A   
F0D5   C9                     RET      
F0D6                MP2:         
F0D6                             ; Key has been pressed
F0D6   3A 24 30               LD   A,(KEYPRE)   
F0D9   B7                     OR   A   
F0DA   C0                     RET   NZ   ; Just return if same
F0DB   3E FF                  LD   A,0FFH   
F0DD   32 24 30               LD   (KEYPRE),A   
F0E0                             ; Get Key
F0E0   DB 00                  IN   A,(KEYBOARD)   
F0E2   E6 1F                  AND   01FH   ; Mask unwanted bits
F0E4                             ; Check for Valid Keys
F0E4                LEFT:        
F0E4   FE 04                  CP   04H   ; Left
F0E6   20 09                  JR   NZ,RIGHT   
F0E8   3A 20 30               LD   A,(PLAYER)   
F0EB   07                     RLCA      ; If Carry then don't move as its already left
F0EC   D8                     RET   C   
F0ED   32 20 30               LD   (PLAYER),A   
F0F0   C9                     RET      ; Return
F0F1                RIGHT:       
F0F1   FE 06                  CP   06H   ; Right
F0F3   20 09                  JR   NZ,SHOOT   
F0F5   3A 20 30               LD   A,(PLAYER)   
F0F8   0F                     RRCA      ; If Carry then don't move as its already right
F0F9   D8                     RET   C   
F0FA   32 20 30               LD   (PLAYER),A   
F0FD   C9                     RET      ; Return
F0FE                SHOOT:       
F0FE   FE 10                  CP   10H   ; "+"
F100   C0                     RET   NZ   
F101                             ;Ensure no bullet is active, BULLET or BULLET+1 should be 00
F101   3A 21 30               LD   A,(BULLET)   
F104   B7                     OR   A   
F105   C0                     RET   NZ   
F106                             ;Create bullet at players position
F106   3A 20 30               LD   A,(PLAYER)   
F109   32 21 30               LD   (BULLET),A   ; X position
F10C   3E 01                  LD   A,01H   ;First bit from bottom
F10E   32 22 30               LD   (BULLET+1),A   
F111   C9                     RET      
F112                             ; If Bullet exists, move it upwards until it hits an invader or
F112                             ; goes off the top of the screen
F112                MOVBUL:      
F112                             ;Check if bullet active
F112   3A 22 30               LD   A,(BULLET+1)   ;Y Pos bullet
F115   B7                     OR   A   
F116   C8                     RET   Z   
F117                             ;Shift it one bit to the left
F117   CB 27                  SLA   A   
F119   32 22 30               LD   (BULLET+1),A   
F11C   B7                     OR   A   
F11D   20 04                  JR   NZ,MB1   
F11F   32 21 30               LD   (BULLET),A   ;Clear X pos if no bullet
F122   C9                     RET      
F123                MB1:         
F123   CD 45 F2               CALL   BULCOL   ;Active bullet, check collision.
F126   C9                     RET      
F127                             ; If Bomb exists, move it downwards until it hits the player or
F127                             ; goes off the bottom of the screen
F127                MOVBOM:      
F127                             ;For each column, move one bit to the left
F127   21 18 30               LD   HL,INVBOM   
F12A   06 80                  LD   B,80H   ;Bomb/Player column
F12C                MBM1:        
F12C   7E                     LD   A,(HL)   
F12D   B7                     OR   A   
F12E   28 06                  JR   Z,MBM2   ;No Bomb on this column, move to next
F130   CB 2F                  SRA   A   ;Move on bit to the right.
F132   77                     LD   (HL),A   
F133                             ;Active Bomb, check if hits player
F133                             ;BOMCOL needs B=Bomb X position
F133   CD 89 F2               CALL   BOMCOL   ;             A=Bomb Y position
F136                MBM2:        
F136   23                     INC   HL   
F137   CB 08                  RRC   B   
F139   30 F1                  JR   NC,MBM1   
F13B   C9                     RET      
F13C                             ; If UFO exists, move it one bit to the left.  Remove it if
F13C                             ; goes off the left of the screen
F13C                MOVUFO:      
F13C                             ;Check if ufo active
F13C   3A 23 30               LD   A,(UFOPOS)   ; Active if any bit set
F13F   B7                     OR   A   
F140   C8                     RET   Z   
F141   CB 27                  SLA   A   ;Shift it one bit to the left
F143   32 23 30               LD   (UFOPOS),A   ;If zero then automatically clears itself
F146                MU1:         
F146   C9                     RET      
F147                             ; Move invaders from Right to Left and back.  When top invader line hits the end
F147                             ; Move invaders down a line.  The Horizontal page is moved then mapped to the
F147                             ; vertical for displaying.
F147                MOVINV:      
F147                             ; Find top line
F147   21 0F 30               LD   HL,INVADH-1   
F14A                MI1:         
F14A   23                     INC   HL   
F14B   7E                     LD   A,(HL)   
F14C   B7                     OR   A   
F14D   28 FB                  JR   Z,MI1   
F14F                             ; Find current direction and move if possible
F14F   3A 25 30               LD   A,(INVDIR)   
F152   B7                     OR   A   
F153   20 0C                  JR   NZ,MLEFT   
F155                MRIGHT:      
F155   7E                     LD   A,(HL)   
F156                MI2:         
F156   0F                     RRCA      
F157   38 14                  JR   C,MDROP   ;At edge, drop down a line
F159   77                     LD   (HL),A   
F15A   23                     INC   HL   
F15B   7E                     LD   A,(HL)   
F15C   B7                     OR   A   ;If empty line end of shift
F15D   28 32                  JR   Z,ROTCW   
F15F   18 F5                  JR   MI2   
F161                MLEFT:       
F161   7E                     LD   A,(HL)   
F162                MI3:         
F162   07                     RLCA      
F163   38 08                  JR   C,MDROP   ;At edge, drop down a line
F165   77                     LD   (HL),A   
F166   23                     INC   HL   
F167   7E                     LD   A,(HL)   
F168   B7                     OR   A   ;If empty line end of shift
F169   28 26                  JR   Z,ROTCW   
F16B   18 F5                  JR   MI3   
F16D                             ;Drop Invaders down a line. If hit bottom then end of game
F16D                MDROP:       
F16D                             ;Rotate down on line
F16D   DD 21 16 30            LD   IX,INVADH+6   
F171   06 07                  LD   B,07H   
F173                MI4:         
F173   DD 7E 00               LD   A,(IX+0)   
F176   DD 77 01               LD   (IX+1),A   
F179   DD 2B                  DEC   IX   
F17B   10 F6                  DJNZ   MI4   
F17D                             ;Change direction flag
F17D   3A 25 30               LD   A,(INVDIR)   
F180   EE 01                  XOR   01H   
F182   32 25 30               LD   (INVDIR),A   
F185                             ;Bottom of screen Lose life and reset invaders
F185   3A 17 30               LD   A,(INVADH+7)   ;Bottom row
F188   B7                     OR   A   
F189   28 06                  JR   Z,ROTCW   
F18B                             ;Lose Life
F18B   CD E9 F1               CALL   LOSELV   
F18E   CD 0F F2               CALL   RSTINV   
F191                             ; Rotate Screen bytes 90 degress Clockwise.
F191                             ; This allows Left to Right bit manipulation
F191                ROTCW:       
F191   11 08 30               LD   DE,INVADV   
F194   06 08                  LD   B,08H   
F196                ROT1:        
F196   C5                     PUSH   BC   
F197   06 08                  LD   B,08H   
F199   21 10 30               LD   HL,INVADH   
F19C   AF                     XOR   A   
F19D                ROT2:        
F19D   CB 06                  RLC   (HL)   
F19F   17                     RLA      
F1A0   23                     INC   HL   
F1A1   10 FA                  DJNZ   ROT2   
F1A3   12                     LD   (DE),A   
F1A4   13                     INC   DE   
F1A5   C1                     POP   BC   
F1A6   10 EE                  DJNZ   ROT1   
F1A8   C9                     RET      
F1A9                             ;Create a Bomb on an invader.  Ensure no bomb present on column first
F1A9                             ;Find the lowest row, then Based off LSB of random number cycle through invaders
F1A9                             ;until random number is zero to select invader to drop the bomb from.
F1A9                CREBOM:      
F1A9   21 18 30               LD   HL,INVADH+8   
F1AC   0E 80                  LD   C,80H   
F1AE   AF                     XOR   A   
F1AF                CB1:         
F1AF   CB 01                  RLC   C   ;Row Position
F1B1   2B                     DEC   HL   
F1B2   B6                     OR   (HL)   
F1B3   28 FA                  JR   Z,CB1   ;Move HL to first row that isn't blank
F1B5   3A 30 30               LD   A,(RANDNO)   
F1B8   E6 0F                  AND   0FH   
F1BA   47                     LD   B,A   ;Store counter
F1BB   7E                     LD   A,(HL)   
F1BC   57                     LD   D,A   
F1BD                CB2:         
F1BD   3E FF                  LD   A,0FFH   
F1BF                CB3:         
F1BF   3C                     INC   A   ;Get matching invader bomb column to invader
F1C0   FE 08                  CP   08H   
F1C2   28 F9                  JR   Z,CB2   ;Loop column index around
F1C4   CB 02                  RLC   D   
F1C6   30 F7                  JR   NC,CB3   ;Find next invader
F1C8   10 F5                  DJNZ   CB3   ;Keep going n random times
F1CA                             ; At this point, C is bomb Y, and D is bomb X (index)
F1CA   21 18 30               LD   HL,INVBOM   
F1CD   85                     ADD   A,L   
F1CE   6F                     LD   L,A   ;Bomb column
F1CF   79                     LD   A,C   ;Bomb row
F1D0   77                     LD   (HL),A   ;Save bomb
F1D1   C9                     RET      
F1D2                             ;Do a check to see if any invaders are left.  If not then reset them for the next wave
F1D2                CHKINV:      
F1D2   3A 32 30               LD   A,(INVREM)   
F1D5   B7                     OR   A   
F1D6   C0                     RET   NZ   
F1D7   CD 0F F2               CALL   RSTINV   
F1DA   C9                     RET      
F1DB                             ;Add A to current score.  A = score to add
F1DB                ADDSCO:      
F1DB   21 27 30               LD   HL,PLAYSC+1   ;Tens
F1DE   86                     ADD   A,(HL)   
F1DF   27                     DAA      
F1E0   77                     LD   (HL),A   
F1E1   D0                     RET   NC   ;Exit if no overflow
F1E2   2B                     DEC   HL   ;Hundreds
F1E3   3E 00                  LD   A,00H   
F1E5   8E                     ADC   A,(HL)   
F1E6   27                     DAA      
F1E7   77                     LD   (HL),A   
F1E8   C9                     RET      
F1E9                             ;Lose a life
F1E9                LOSELV:      
F1E9   3A 28 30               LD   A,(PLAYLV)   
F1EC   3D                     DEC   A   
F1ED   32 28 30               LD   (PLAYLV),A   
F1F0   CD 28 F3               CALL   FLIPSC   ;Do something to indicate life loss
F1F3   C9                     RET      
F1F4                             ;Initialize the screen data
F1F4                SETUP:       
F1F4                             ; Set up invader position and bombs
F1F4   CD 0F F2               CALL   RSTINV   
F1F7                             ; Fill Player position.  Start at ...0....
F1F7   3E 10                  LD   A,INITPL   
F1F9   32 20 30               LD   (PLAYER),A   
F1FC                             ; Fill Player initial lives
F1FC   3E 03                  LD   A,INITLV   
F1FE   32 28 30               LD   (PLAYLV),A   
F201                             ; Fill Bullet Pos., UFO Pos., Action Counter, Key Pressed
F201                             ; Invader Dir, Player's score to 0
F201   21 21 30               LD   HL,BULLET   
F204   11 22 30               LD   DE,BULLET+1   
F207   AF                     XOR   A   
F208   77                     LD   (HL),A   
F209   01 06 00               LD   BC,06H   
F20C   ED B0                  LDIR      
F20E   C9                     RET      
F20F                             ;Reset invader to starting position and movement direction
F20F                RSTINV:      
F20F                             ; Copy Vertical Invaders
F20F   01 08 00               LD   BC,0008H   
F212   11 08 30               LD   DE,INVADV   
F215   21 7F F3               LD   HL,INITIV   
F218   ED B0                  LDIR      
F21A                             ; Copy Horizontal Invaders
F21A   01 08 00               LD   BC,0008H   
F21D   11 10 30               LD   DE,INVADH   
F220   21 87 F3               LD   HL,INITIH   
F223   ED B0                  LDIR      
F225                             ; Fill Invaders Bombs with 0 x 8 times
F225   21 18 30               LD   HL,INVBOM   
F228   11 19 30               LD   DE,INVBOM+1   
F22B   AF                     XOR   A   
F22C   77                     LD   (HL),A   
F22D   01 07 00               LD   BC,07H   
F230   ED B0                  LDIR      
F232                             ; Invader direction
F232   32 25 30               LD   (INVDIR),A   
F235                             ; Fill Invaders initial speed
F235   3A 99 F3               LD   A,(ININSP)   
F238   32 29 30               LD   (INVCNT),A   
F23B   32 31 30               LD   (INVSPD),A   
F23E                             ; Reset Invader count
F23E   3A 9A F3               LD   A,(INITIC)   
F241   32 32 30               LD   (INVREM),A   
F244   C9                     RET      
F245                             ;Bullet Collision.  If hits an invader or ufo then remove it and update score
F245                             ;Increase invader speed if an invader gets hit.
F245                BULCOL:      
F245   3A 22 30               LD   A,(BULLET+1)   
F248   CB 7F                  BIT   7,A   ; Check UFO hit
F24A   20 26                  JR   NZ,BUFO   
F24C                             ; Get Invader Column the bullet is on
F24C   21 0F 30               LD   HL,INVADH-1   
F24F                B1:          
F24F   23                     INC   HL   
F250   07                     RLCA      
F251   30 FC                  JR   NC,B1   
F253   3A 21 30               LD   A,(BULLET)   
F256   A6                     AND   (HL)   ;Compare bullet and invaders
F257   C8                     RET   Z   ;No hit
F258   AE                     XOR   (HL)   ;Remove invader
F259   77                     LD   (HL),A   ;Save
F25A   CD 91 F1               CALL   ROTCW   ;Update Vertical for instant display
F25D   21 31 30               LD   HL,INVSPD   
F260   35                     DEC   (HL)   ;Move Invaders a bit faster
F261   21 32 30               LD   HL,INVREM   
F264   35                     DEC   (HL)   ;Reduce Invader Count
F265   AF                     XOR   A   
F266   32 21 30               LD   (BULLET),A   ;Remove Bullet
F269   32 22 30               LD   (BULLET+1),A   
F26C   3E 10                  LD   A,10H   ;10 Points
F26E   CD DB F1               CALL   ADDSCO   ;Add A to Score
F271   C9                     RET      
F272                BUFO:        
F272                             ;If UFO and BULLET X are the same its a hit
F272   21 21 30               LD   HL,BULLET   
F275   3A 23 30               LD   A,(UFOPOS)   
F278   96                     SUB   (HL)   
F279   C0                     RET   NZ   
F27A   32 23 30               LD   (UFOPOS),A   ;A=0 if here
F27D   32 21 30               LD   (BULLET),A   ;Remove Bullet
F280   32 22 30               LD   (BULLET+1),A   
F283   3E 50                  LD   A,50H   ;50 Points
F285   CD DB F1               CALL   ADDSCO   ;Add A to Score
F288   C9                     RET      
F289                             ;Bomb Collision. Inputs: Register A = Bomb Y, and B = Bomb X
F289                             ;If Bomb Y is set on bit 7, check that Bomb X = Player X. If so
F289                             ;Loose life
F289                BOMCOL:      
F289   3D                     DEC   A   
F28A   C0                     RET   NZ   ;If A != 1 then bomb isn't on bottom
F28B   3A 20 30               LD   A,(PLAYER)   
F28E   B8                     CP   B   
F28F   C0                     RET   NZ   ;If A != B then bomb isn't on player
F290   CD E9 F1               CALL   LOSELV   ;Loose a life
F293   C9                     RET      
F294                             ;Utility Routines..
F294                             ; Multiplex the 8x8 Display and the Seven Segment LEDS
F294                SCAN:        
F294   06 10                  LD   B,10H   
F296                S1:          
F296   C5                     PUSH   BC   
F297   06 01                  LD   B,01H   ;Counter for 8x8
F299   21 00 30               LD   HL,SCREEN   
F29C   11 2F 30               LD   DE,LEDSCR+5   
F29F                S2:          
F29F   7E                     LD   A,(HL)   
F2A0   D3 06                  OUT   (LEDROW),A   
F2A2   1A                     LD   A,(DE)   
F2A3   D3 02                  OUT   (DSEGMENT),A   
F2A5   78                     LD   A,B   
F2A6   D3 05                  OUT   (LEDCOL),A   
F2A8   FE 80                  CP   80H   ;If port 80 (Speaker), Skip
F2AA   28 02                  JR   Z,S3   
F2AC   D3 01                  OUT   (DSCAN),A   
F2AE                S3:          
F2AE   06 40                  LD   B,40H   
F2B0   10 FE        S4:       DJNZ   S4   
F2B2   47                     LD   B,A   
F2B3   AF                     XOR   A   
F2B4   D3 05                  OUT   (LEDCOL),A   
F2B6   D3 01                  OUT   (DSCAN),A   
F2B8   1B                     DEC   DE   
F2B9   23                     INC   HL   
F2BA   CB 00                  RLC   B   
F2BC   30 E1                  JR   NC,S2   
F2BE   C1                     POP   BC   
F2BF   10 D5                  DJNZ   S1   
F2C1   C9                     RET      
F2C2                             ;Random number generator.  A - Returns a number between 00 and FF
F2C2                RANDOM:      
F2C2   ED 5F                  LD   A,R   
F2C4   47                     LD   B,A   
F2C5   3A 30 30               LD   A,(RANDNO)   
F2C8   A8                     XOR   B   
F2C9   87                     ADD   A,A   
F2CA   A8                     XOR   B   
F2CB   32 30 30               LD   (RANDNO),A   
F2CE   C9                     RET      
F2CF                             ;Convert A to two display bytes for Seven Segment, Store Result in location of BC
F2CF                SEGCON:      
F2CF   F5                     PUSH   AF   
F2D0   07                     RLCA      
F2D1   07                     RLCA      
F2D2   07                     RLCA      
F2D3   07                     RLCA      
F2D4   CD D8 F2               CALL   SC1   
F2D7   F1                     POP   AF   
F2D8                SC1:         
F2D8   E6 0F                  AND   0FH   
F2DA   11 8F F3               LD   DE,SEGTBL   
F2DD   83                     ADD   A,E   
F2DE   5F                     LD   E,A   
F2DF   1A                     LD   A,(DE)   
F2E0   02                     LD   (BC),A   
F2E1   03                     INC   BC   
F2E2   C9                     RET      
F2E3                             ;8x8 Scroll routine to scroll data from right to left.  Data is referenced in HL
F2E3                             ;First Byte is number of columns to scroll followed by vertical byte display upwards
F2E3                             ;This routine includes the 8x8 multiplex
F2E3                INTROM:      
F2E3   21 9B F3               LD   HL,INTMSG   
F2E6   7E                     LD   A,(HL)   ;Column count
F2E7   4F                     LD   C,A   
F2E8                SL1:         
F2E8   06 07                  LD   B,07H   
F2EA   DD 21 00 30            LD   IX,SCREEN   
F2EE                SL2:         
F2EE   DD 7E 01               LD   A,(IX+1)   ;Shift seven columns
F2F1   DD 77 00               LD   (IX+0),A   
F2F4   DD 23                  INC   IX   
F2F6   10 F6                  DJNZ   SL2   
F2F8   23                     INC   HL   
F2F9   7E                     LD   A,(HL)   
F2FA   32 07 30               LD   (SCREEN+7),A   
F2FD   CD 5E F3               CALL   SCAN88   
F300   0D                     DEC   C   
F301   20 E5                  JR   NZ,SL1   
F303   C9                     RET      
F304                             ;8x8 Flasher routine.  This displays data for the 8x8 similar to the scroll but shows
F304                             ;one page (8x8) at a time instead of sequentially scrolling.  Data is referenced in HL
F304                             ;First byte is the number of pages to show followed by vertical byte display upwards
F304                             ;Useful for animations using the 8x8.  This is used as a game over screen.  It loops
F304                             ;until any key is pressed
F304                GAMEOV:      
F304   21 EC F3               LD   HL,OVRMSG   
F307   7E                     LD   A,(HL)   ;Page count
F308   23                     INC   HL   
F309   4F                     LD   C,A   
F30A                F1:          
F30A   C5                     PUSH   BC   
F30B   11 00 30               LD   DE,SCREEN   
F30E   01 08 00               LD   BC,0008H   
F311   ED B0                  LDIR      ;Copy Through to screen area
F313   06 0B                  LD   B,0BH   
F315                F2:          
F315   C5                     PUSH   BC   
F316   CD 5E F3               CALL   SCAN88   
F319   C1                     POP   BC   
F31A   10 F9                  DJNZ   F2   
F31C   C1                     POP   BC   
F31D   DB 03                  IN   A,(KEYPRESS)   
F31F   CB 77                  BIT   6,A   ; Bit 6, If not set A=NZ
F321   C8                     RET   Z   
F322   0D                     DEC   C   
F323   20 E5                  JR   NZ,F1   ;Do next screen
F325   18 DD                  JR   GAMEOV   
F327   C9                     RET      
F328                             ;Animate 8x8 when player looses a life by inverting the screen 3 times and playing
F328                             ;a sound
F328                FLIPSC:      
F328   E5                     PUSH   HL   
F329   C5                     PUSH   BC   
F32A   06 0C                  LD   B,0CH   ;Six loops or 3 flips
F32C                FS1:         
F32C   21 00 30               LD   HL,SCREEN   
F32F   C5                     PUSH   BC   
F330   06 08                  LD   B,08H   
F332                FS2:         
F332   7E                     LD   A,(HL)   
F333   2F                     CPL      ;Invert byte
F334   77                     LD   (HL),A   
F335   23                     INC   HL   
F336   10 FA                  DJNZ   FS2   
F338   CD 5E F3               CALL   SCAN88   
F33B   0E 40                  LD   C,40H   ;Sound Routine
F33D   2E 31                  LD   L,31H   
F33F   AF                     XOR   A   
F340                FS3:         
F340   D3 01                  OUT   (DSCAN),A   
F342   41                     LD   B,C   
F343   10 FE        FS4:      DJNZ   FS4   
F345   EE 80                  XOR   80H   
F347   2D                     DEC   L   
F348   20 F6                  JR   NZ,FS3   
F34A   C1                     POP   BC   
F34B   10 DF                  DJNZ   FS1   
F34D   C1                     POP   BC   
F34E   E1                     POP   HL   
F34F   C9                     RET      
F350                CLRSCR:      
F350   21 00 30               LD   HL,SCREEN   
F353   11 01 30               LD   DE,SCREEN+1   
F356   AF                     XOR   A   
F357   77                     LD   (HL),A   
F358   01 07 00               LD   BC,07H   
F35B   ED B0                  LDIR      
F35D   C9                     RET      
F35E                             ; Multiplex the 8x8 Display
F35E                SCAN88:      
F35E   E5                     PUSH   HL   
F35F   06 15                  LD   B,15H   
F361                S81:         
F361   C5                     PUSH   BC   
F362   06 01                  LD   B,01H   ;Counter for 8x8
F364   21 00 30               LD   HL,SCREEN   
F367                S82:         
F367   7E                     LD   A,(HL)   
F368   D3 06                  OUT   (LEDROW),A   
F36A   78                     LD   A,B   
F36B   D3 05                  OUT   (LEDCOL),A   
F36D   06 80                  LD   B,80H   
F36F   10 FE        S83:      DJNZ   S83   
F371   23                     INC   HL   
F372   47                     LD   B,A   
F373   AF                     XOR   A   
F374   D3 05                  OUT   (LEDCOL),A   
F376   CB 00                  RLC   B   
F378   30 ED                  JR   NC,S82   
F37A   C1                     POP   BC   
F37B   10 E4                  DJNZ   S81   
F37D   E1                     POP   HL   
F37E   C9                     RET      
F37F                             ; Game Data
F37F                             ; Invaders are initially shown as
F37F                             ; . . . . . . . .
F37F                             ; O O O O . . . .
F37F                             ; O O O O . . . .
F37F                             ; O O O O . . . .
F37F                             ; . . . . . . . .
F37F                             ; . . . . . . . .
F37F                             ; . . . . . . . .
F37F                             ; . . . . . . . .
F37F                             ; 
F37F   70 70 70 70 00 00 00 00 INITIV:   DB   70H,70H,70H,70H,00H,00H,00H,00H   
F387                             ; Invaders rotated to the left for easy bit move
F387                             ; . . . . . . . .
F387                             ; . . . . . . . .
F387                             ; . . . . . . . .
F387                             ; . . . . . . . .
F387                             ; . O O O . . . .
F387                             ; . O O O . . . .
F387                             ; . O O O . . . .
F387                             ; . O O O . . . .
F387                             ; 
F387   00 F0 F0 F0 00 00 00 00 INITIH:   DB   00H,0F0H,0F0H,0F0H,00H,00H,00H,00H   
F38F                             ; 0-9 to Seven Segment Table
F38F   EB 28 CD AD 2E A7 E7 29 EF 2F SEGTBL:   DB   0EBH,28H,0CDH,0ADH,2EH,0A7H,0E7H,29H,0EFH,2FH   
F399                             ; Initial Invader Speed.  Reduces at each invader hit
F399   12           ININSP:   DB   12H   
F39A                             ; Initial Invader Count.  Currently 12
F39A   0C           INITIC:   DB   0CH   
F39B                             ; Intro Message
F39B   50 00        INTMSG:   DB   50H,00H   ;Size + Gap
F39D   40 40 7F 7F 40 40 00   DB   40H,40H,7FH,7FH,40H,40H,00H   ;T
F3A4   7F 7F 49 49 00         DB   7FH,7FH,49H,49H,00H   ;E
F3A9   1C 3E 63 41 41 00      DB   1CH,3EH,63H,41H,41H,00H   ;C
F3AF   00 00                  DB   00H,00H   ;_
F3B1   41 7F 7F 41 00         DB   41H,7FH,7FH,41H,00H   ;I
F3B6   7F 7F 18 0C 7F 7F 00   DB   7FH,7FH,18H,0CH,7FH,7FH,00H   ;N
F3BD   60 38 0E 03 0E 38 60 00 DB   60H,38H,0EH,03H,0EH,38H,60H,00H   ;V
F3C5   03 0E 3C 64 3C 0E 03 00 DB   03H,0EH,3CH,64H,3CH,0EH,03H,00H   ;A
F3CD   7F 7F 41 22 1C 00      DB   7FH,7FH,41H,22H,1CH,00H   ;D
F3D3   7F 7F 49 49 00         DB   7FH,7FH,49H,49H,00H   ;E
F3D8   7F 7F 4C 4A 31 00      DB   7FH,7FH,4CH,4AH,31H,00H   ;R
F3DE   12 3B 6B 6E 24 00      DB   12H,3BH,6BH,6EH,24H,00H   ;S
F3E4   00 00 00 00 00 00 00 00 DB   00H,00H,00H,00H,00H,00H,00H,00H   ;_
F3EC                             ; Game Over Message
F3EC   02           OVRMSG:   DB   02H   ;Page count
F3ED   67 94 B4 27 00 77 A5 75 DB   67H,94H,0B4H,27H,00H,77H,0A5H,75H   ;GAME
F3F5   67 95 95 60 00 E7 14 E4 DB   67H,95H,95H,60H,00H,0E7H,14H,0E4H   ;OVER
F3FD   00 00 00               DB   00H,00H,00H   ;FILL


SCREEN:             3000 DEFINED AT LINE 32
                    > USED AT LINE 131
                    > USED AT LINE 137
                    > USED AT LINE 151
                    > USED AT LINE 167
                    > USED AT LINE 182
                    > USED AT LINE 574
                    > USED AT LINE 640
                    > USED AT LINE 648
                    > USED AT LINE 666
                    > USED AT LINE 691
                    > USED AT LINE 720
                    > USED AT LINE 721
                    > USED AT LINE 735
INVADV:             3008 DEFINED AT LINE 33
                    > USED AT LINE 132
                    > USED AT LINE 380
                    > USED AT LINE 487
INVADH:             3010 DEFINED AT LINE 34
                    > USED AT LINE 323
                    > USED AT LINE 359
                    > USED AT LINE 371
                    > USED AT LINE 385
                    > USED AT LINE 402
                    > USED AT LINE 492
                    > USED AT LINE 520
INVBOM:             3018 DEFINED AT LINE 35
                    > USED AT LINE 138
                    > USED AT LINE 289
                    > USED AT LINE 426
                    > USED AT LINE 496
                    > USED AT LINE 497
PLAYER:             3020 DEFINED AT LINE 36
                    > USED AT LINE 166
                    > USED AT LINE 240
                    > USED AT LINE 243
                    > USED AT LINE 248
                    > USED AT LINE 251
                    > USED AT LINE 261
                    > USED AT LINE 469
                    > USED AT LINE 560
BULLET:             3021 DEFINED AT LINE 37
                    > USED AT LINE 148
                    > USED AT LINE 158
                    > USED AT LINE 257
                    > USED AT LINE 262
                    > USED AT LINE 264
                    > USED AT LINE 271
                    > USED AT LINE 276
                    > USED AT LINE 279
                    > USED AT LINE 475
                    > USED AT LINE 476
                    > USED AT LINE 516
                    > USED AT LINE 525
                    > USED AT LINE 536
                    > USED AT LINE 537
                    > USED AT LINE 543
                    > USED AT LINE 548
                    > USED AT LINE 549
UFOPOS:             3023 DEFINED AT LINE 38
                    > USED AT LINE 108
                    > USED AT LINE 112
                    > USED AT LINE 179
                    > USED AT LINE 310
                    > USED AT LINE 314
                    > USED AT LINE 544
                    > USED AT LINE 547
KEYPRE:             3024 DEFINED AT LINE 39
                    > USED AT LINE 224
                    > USED AT LINE 228
                    > USED AT LINE 232
INVDIR:             3025 DEFINED AT LINE 40
                    > USED AT LINE 330
                    > USED AT LINE 367
                    > USED AT LINE 369
                    > USED AT LINE 503
PLAYSC:             3026 DEFINED AT LINE 41
                    > USED AT LINE 199
                    > USED AT LINE 443
PLAYLV:             3028 DEFINED AT LINE 42
                    > USED AT LINE 121
                    > USED AT LINE 457
                    > USED AT LINE 459
                    > USED AT LINE 472
INVCNT:             3029 DEFINED AT LINE 43
                    > USED AT LINE 88
                    > USED AT LINE 95
                    > USED AT LINE 506
LEDSCR:             302A DEFINED AT LINE 44
                    > USED AT LINE 198
                    > USED AT LINE 575
RANDNO:             3030 DEFINED AT LINE 45
                    > USED AT LINE 82
                    > USED AT LINE 105
                    > USED AT LINE 410
                    > USED AT LINE 605
                    > USED AT LINE 609
INVSPD:             3031 DEFINED AT LINE 46
                    > USED AT LINE 93
                    > USED AT LINE 507
                    > USED AT LINE 531
INVREM:             3032 DEFINED AT LINE 47
                    > USED AT LINE 435
                    > USED AT LINE 510
                    > USED AT LINE 533
INITPL:             0010 DEFINED AT LINE 49
                    > USED AT LINE 468
INITLV:             0003 DEFINED AT LINE 50
                    > USED AT LINE 471
UFOSPD:             0007 DEFINED AT LINE 51
                    > USED AT LINE 98
                    > USED AT LINE 99
UFOCRE:             0006 DEFINED AT LINE 52
                    > USED AT LINE 106
BOMCRE:             0010 DEFINED AT LINE 53
                    > USED AT LINE 83
KEYBOARD:           0000 DEFINED AT LINE 55
                    > USED AT LINE 234
DSCAN:              0001 DEFINED AT LINE 56
                    > USED AT LINE 585
                    > USED AT LINE 592
                    > USED AT LINE 706
DSEGMENT:           0002 DEFINED AT LINE 57
                    > USED AT LINE 580
KEYPRESS:           0003 DEFINED AT LINE 58
                    > USED AT LINE 219
                    > USED AT LINE 676
LEDROW:             0006 DEFINED AT LINE 59
                    > USED AT LINE 578
                    > USED AT LINE 738
LEDCOL:             0005 DEFINED AT LINE 60
                    > USED AT LINE 582
                    > USED AT LINE 591
                    > USED AT LINE 740
                    > USED AT LINE 746
START:              F000 DEFINED AT LINE 63
                    > USED AT LINE 125
GAME:               F009 DEFINED AT LINE 72
                    > USED AT LINE 123
SKIPBM:             F01F DEFINED AT LINE 86
                    > USED AT LINE 84
SKIPMV:             F02C DEFINED AT LINE 94
                    > USED AT LINE 91
SKIPUM:             F03C DEFINED AT LINE 103
                    > USED AT LINE 100
SKIPUC:             F04E DEFINED AT LINE 114
                    > USED AT LINE 107
                    > USED AT LINE 110
UPDSCR:             F062 DEFINED AT LINE 128
                    > USED AT LINE 116
U1:                 F075 DEFINED AT LINE 139
                    > USED AT LINE 145
U2:                 F085 DEFINED AT LINE 152
                    > USED AT LINE 156
U3:                 F08B DEFINED AT LINE 157
                    > USED AT LINE 154
U4:                 F092 DEFINED AT LINE 164
                    > USED AT LINE 150
U5:                 F098 DEFINED AT LINE 168
                    > USED AT LINE 172
U6:                 F09E DEFINED AT LINE 173
                    > USED AT LINE 170
U7:                 F0AB DEFINED AT LINE 183
                    > USED AT LINE 187
U8:                 F0B1 DEFINED AT LINE 188
                    > USED AT LINE 185
U9:                 F0B5 DEFINED AT LINE 192
                    > USED AT LINE 181
UPDSCO:             F0B6 DEFINED AT LINE 197
                    > USED AT LINE 117
MOVPLA:             F0CB DEFINED AT LINE 217
                    > USED AT LINE 74
MP2:                F0D6 DEFINED AT LINE 226
                    > USED AT LINE 221
LEFT:               F0E4 DEFINED AT LINE 237
RIGHT:              F0F1 DEFINED AT LINE 245
                    > USED AT LINE 239
SHOOT:              F0FE DEFINED AT LINE 253
                    > USED AT LINE 247
MOVBUL:             F112 DEFINED AT LINE 269
                    > USED AT LINE 75
MB1:                F123 DEFINED AT LINE 281
                    > USED AT LINE 278
MOVBOM:             F127 DEFINED AT LINE 287
                    > USED AT LINE 102
MBM1:               F12C DEFINED AT LINE 291
                    > USED AT LINE 303
MBM2:               F136 DEFINED AT LINE 300
                    > USED AT LINE 294
MOVUFO:             F13C DEFINED AT LINE 308
                    > USED AT LINE 101
MU1:                F146 DEFINED AT LINE 315
MOVINV:             F147 DEFINED AT LINE 321
                    > USED AT LINE 92
MI1:                F14A DEFINED AT LINE 324
                    > USED AT LINE 328
MRIGHT:             F155 DEFINED AT LINE 333
MI2:                F156 DEFINED AT LINE 335
                    > USED AT LINE 343
MLEFT:              F161 DEFINED AT LINE 344
                    > USED AT LINE 332
MI3:                F162 DEFINED AT LINE 346
                    > USED AT LINE 354
MDROP:              F16D DEFINED AT LINE 357
                    > USED AT LINE 337
                    > USED AT LINE 348
MI4:                F173 DEFINED AT LINE 361
                    > USED AT LINE 365
ROTCW:              F191 DEFINED AT LINE 379
                    > USED AT LINE 342
                    > USED AT LINE 353
                    > USED AT LINE 373
                    > USED AT LINE 530
ROT1:               F196 DEFINED AT LINE 382
                    > USED AT LINE 395
ROT2:               F19D DEFINED AT LINE 387
                    > USED AT LINE 391
CREBOM:             F1A9 DEFINED AT LINE 401
                    > USED AT LINE 85
CB1:                F1AF DEFINED AT LINE 405
                    > USED AT LINE 409
CB2:                F1BD DEFINED AT LINE 415
                    > USED AT LINE 421
CB3:                F1BF DEFINED AT LINE 418
                    > USED AT LINE 423
                    > USED AT LINE 424
CHKINV:             F1D2 DEFINED AT LINE 434
                    > USED AT LINE 76
ADDSCO:             F1DB DEFINED AT LINE 442
                    > USED AT LINE 539
                    > USED AT LINE 551
LOSELV:             F1E9 DEFINED AT LINE 456
                    > USED AT LINE 375
                    > USED AT LINE 563
SETUP:              F1F4 DEFINED AT LINE 464
                    > USED AT LINE 69
RSTINV:             F20F DEFINED AT LINE 484
                    > USED AT LINE 376
                    > USED AT LINE 438
                    > USED AT LINE 466
BULCOL:             F245 DEFINED AT LINE 515
                    > USED AT LINE 282
B1:                 F24F DEFINED AT LINE 521
                    > USED AT LINE 524
BUFO:               F272 DEFINED AT LINE 541
                    > USED AT LINE 518
BOMCOL:             F289 DEFINED AT LINE 557
                    > USED AT LINE 299
SCAN:               F294 DEFINED AT LINE 569
                    > USED AT LINE 118
S1:                 F296 DEFINED AT LINE 571
                    > USED AT LINE 598
S2:                 F29F DEFINED AT LINE 576
                    > USED AT LINE 596
S3:                 F2AE DEFINED AT LINE 586
                    > USED AT LINE 584
S4:                 F2B0 DEFINED AT LINE 588
                    > USED AT LINE 588
RANDOM:             F2C2 DEFINED AT LINE 602
                    > USED AT LINE 73
SEGCON:             F2CF DEFINED AT LINE 613
                    > USED AT LINE 201
                    > USED AT LINE 204
                    > USED AT LINE 207
SC1:                F2D8 DEFINED AT LINE 621
                    > USED AT LINE 619
INTROM:             F2E3 DEFINED AT LINE 634
                    > USED AT LINE 66
SL1:                F2E8 DEFINED AT LINE 638
                    > USED AT LINE 651
SL2:                F2EE DEFINED AT LINE 641
                    > USED AT LINE 645
GAMEOV:             F304 DEFINED AT LINE 659
                    > USED AT LINE 124
                    > USED AT LINE 681
F1:                 F30A DEFINED AT LINE 664
                    > USED AT LINE 680
F2:                 F315 DEFINED AT LINE 670
                    > USED AT LINE 674
FLIPSC:             F328 DEFINED AT LINE 686
                    > USED AT LINE 460
FS1:                F32C DEFINED AT LINE 690
                    > USED AT LINE 714
FS2:                F332 DEFINED AT LINE 694
                    > USED AT LINE 699
FS3:                F340 DEFINED AT LINE 705
                    > USED AT LINE 711
FS4:                F343 DEFINED AT LINE 708
                    > USED AT LINE 708
CLRSCR:             F350 DEFINED AT LINE 719
                    > USED AT LINE 65
SCAN88:             F35E DEFINED AT LINE 729
                    > USED AT LINE 649
                    > USED AT LINE 672
                    > USED AT LINE 700
S81:                F361 DEFINED AT LINE 732
                    > USED AT LINE 750
S82:                F367 DEFINED AT LINE 736
                    > USED AT LINE 748
S83:                F36F DEFINED AT LINE 742
                    > USED AT LINE 742
INITIV:             F37F DEFINED AT LINE 766
                    > USED AT LINE 488
INITIH:             F387 DEFINED AT LINE 778
                    > USED AT LINE 493
SEGTBL:             F38F DEFINED AT LINE 781
                    > USED AT LINE 623
ININSP:             F399 DEFINED AT LINE 784
                    > USED AT LINE 505
INITIC:             F39A DEFINED AT LINE 787
                    > USED AT LINE 509
INTMSG:             F39B DEFINED AT LINE 790
                    > USED AT LINE 635
OVRMSG:             F3EC DEFINED AT LINE 806
                    > USED AT LINE 660
