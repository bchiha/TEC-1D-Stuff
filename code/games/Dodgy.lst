# File /Users/slarti/Documents/TEC1x/TEC-1D-Stuff/code/games/Dodgy.z80
0000			; Dodgy 
0000			; ----- 
0000			; 
0000			; Game Written by Brian Chiha for the TEC  
0000			; brian.chiha@gmail.com  -- June 2022 
0000			; based off My Geeky Hobby's game https://www.youtube.com/shorts/8qC-zWvlHO8 
0000			; 
0000			; The aim of the game is to dodgy obsticles that are flying in from the right  
0000			; of the LED Segments.  The Player is on the left of the screen as a '-' char 
0000			; To dodge, use Button '7' to go up and Button '4' to go down.  If you hit an 
0000			; obsticle, the game is over and your distance travelled is displayed.  Press 
0000			; 'GO', to restart the game. The movement gets faster the longer you play the 
0000			; game.  How far can you GO! 
0000			; 
0000			 
0000			;Memory Locations 
0000			SCREEN:     EQU    2D00H 	        ;Game Screen Data 6 Bytes 
0000			SCREND:     EQU    SCREEN+5         ;End of Screen 
0000			DISTVL:     EQU    2D06H            ;Distance Travelled 2 Bytes 
0000			PLAYPOS:    EQU    2D08H            ;Player Position 1 Byte 
0000			KEYPRE:     EQU    2D09H            ;Key press flag 1 Byte 
0000			SPEED:      EQU    2D0AH            ;Speed of update 
0000			;Constants 
0000			KEY_UP:     EQU    07H              ;Up Key Constant 
0000			KEY_DN:     EQU    04H              ;Down Key Constant 
0000			 
0000			            ORG    2000H            ;Start Location of Code 
2000			START: 
2000 01 0a 00		            LD      BC,0AH          ;Do 10 times 
2003 21 00 2d		            LD      HL,SCREEN       ;Set HL to First RAM location 
2006 af			            XOR     A               ;Zero A 
2007			DO1: 
2007 77			            LD      (HL),A          ;Clear  Data 
2008 23			            INC     HL 
2009 10 fc		            DJNZ    DO1             ;Repeat 
200b			GAME: 
200b			;SHIFT TERRAIN 
200b 0d			            DEC     C               ;Decrease Delay and if 
200c 20 52		            JR      NZ, DO6         ;Zero shift terrain else just scan displays 
200e 06 05		            LD      B, 05H          ;Shift down 5 times 
2010 dd 21 00 2d	            LD      IX, SCREEN      ;Point IX to Screen 
2014			DO2: 
2014 dd 7e 01		            LD      A,(IX+1)        ;Get value to the right 
2017 dd 77 00		            LD      (IX+0), A       ;Place to the left 
201a dd 23		            INC     IX              ;Move to next Segment 
201c 10 f6		            DJNZ    DO2             ;Repeat all five 
201e dd 56 fb		            LD      D, (IX-5)       ;Save first position for later 
2021			;ADD OBSTICLE ON SECOND SHIFT 
2021 3a 05 2d		            LD      A, (SCREND)     ;Get previous segment 
2024 b7			            OR      A               ;Is it Blank? 
2025 28 03		            JR      Z, DO3          ;Yes, Add Obsticle 
2027 af			            XOR     A               ;Make it Blank 
2028 18 0e		            JR      DO5 
202a			DO3: 
202a ed 5f		            LD      A,R             ;Get Random Value 
202c e6 03		            AND     03H             ;Get the last two bits 
202e fe 03		            CP      03H             ;Is it Three? 
2030 28 f8		            JR      Z, DO3          ;No, index is okay 
2032			DO4: 
2032 21 c3 20		            LD      HL, OBSTICLES   ;Link HL to obsticle table 
2035 85			            ADD     A, L            ;Get the index 
2036 6f			            LD      L, A            ;Save the index 
2037 7e			            LD      A, (HL)         ;Get Obsticle  
2038			DO5: 
2038 32 05 2d		            LD      (SCREND), A     ;Add Obsticle/Blank 
203b			;ADD PLAYER 
203b 3a 08 2d		            LD      A, (PLAYPOS)    ;Get the player position 
203e 21 c6 20		            LD      HL, PLAYER      ;Link HL to player table 
2041 85			            ADD     A, L            ;Get the index 
2042 6f			            LD      L, A            ;Save the index 
2043 7e			            LD      A, (HL)         ;Get Player Segment 
2044			;CHECK FOR COLLISION 
2044 b2			            OR      D               ;Compare player verses obsticle 
2045 ba			            CP      D               ;Is it the same as obsticle, 
2046 28 51		            JR      Z, DO13         ;Yes, Its a Hit, Game Over 
2048 32 00 2d		            LD      (SCREEN), A     ;Add Player to Screen. 
204b			;UPDATE DISTANCE TRAVELLED 
204b 21 06 2d		            LD      HL, DISTVL      ;Load HL with the TEN's of distance 
204e 7e			            LD      A, (HL)         ;Get its value 
204f 3c			            INC     A               ;Increase it by one 
2050 27			            DAA                     ;Convert to BCD 
2051 77			            LD      (HL),A          ;Save it back 
2052 23			            INC     HL              ;Load HL with the Hundreds's of dist 
2053 3e 00		            LD      A,00H           ;Set A to zero (maintain carry) 
2055 8e			            ADC     A,(HL)          ;Add Hundreds with Carry 
2056 27			            DAA                     ;Convert to BCD 
2057 77			            LD      (HL),A          ;Save it back 
2058			 
2058 3a 0a 2d		            LD      A, (SPEED) 
205b 3d			            DEC     A 
205c 4f			            LD      C, A 
205d 32 0a 2d		            LD      (SPEED), A 
2060			 
2060			;MULTIPLEX THE DISPLAY 
2060			DO6: 
2060 cd c9 20		            CALL    DOSCAN          ;Display the screen 
2063			;MOVE PLAYER 
2063			                                    ;Replace RST 20/NOP to LD A,I if JMON isn't used 
2063 e7			            RST     20H             ;JMON No Wait Key handler  
2064 00			            NOP                     ;Pad out for JMON only 
2065			;            LD      A, I            ;Get Key (non JMON - Remove RST 20H and NOP) 
2065 47			            LD      B, A 
2066 fe ff		            CP      0FFH            ;If FF then no key hit, so Return 
2068 20 06		            JR      NZ, DO10        ;Continue with game 
206a af			            XOR     A               ;Zero A 
206b 32 09 2d		            LD      (KEYPRE), A     ;Save in keypress as a no hit 
206e			DO9: 
206e 18 9b		            JR      GAME            ;Start Game loop 
2070			DO10: 
2070 3a 09 2d		            LD      A,(KEYPRE)      ;Get keypress flag 
2073 b7			            OR      A               ;Is it zero 
2074 20 f8		            JR      NZ, DO9         ;No, key needs to be released 
2076 3d			            DEC     A               ;Set A to FF 
2077 32 09 2d		            LD      (KEYPRE), A     ;Store in keypress flag 
207a 78			            LD      A, B            ;Restore Key Pressed 
207b fe 07		            CP      KEY_UP          ;Is key 'UP' 
207d 20 09		            JR      NZ, DO11        ;No, Check Down Key 
207f 3a 08 2d		            LD      A, (PLAYPOS)    ;Get Player Position 
2082 b7			            OR      A               ;Is it at the top already? 
2083 28 e9		            JR      Z, DO9          ;Ignore Key hit 
2085 3d			            DEC     A               ;Move down one 
2086 18 0c		            JR      DO12            ;Save Move and continue with game 
2088			DO11: 
2088 fe 04		            CP      KEY_DN          ;Is key 'DN' 
208a 20 e2		            JR      NZ, DO9         ;No, Continue with game 
208c 3a 08 2d		            LD      A, (PLAYPOS)    ;Get Player Position 
208f fe 02		            CP      02H             ;Is it at the bottom already? 
2091 28 db		            JR      Z, DO9          ;Ignore Key hit 
2093 3c			            INC     A               ;Move down one 
2094			DO12: 
2094 32 08 2d		            LD      (PLAYPOS), A    ;Save new position 
2097 18 d5		            JR      DO9             ;Continue with game 
2099			 
2099			;GAME OVER 
2099			DO13: 
2099 2a 06 2d		            LD      HL,(DISTVL)     ;Get Distanced Travelled 
209c cd e4 20		            CALL    DOCON_HL        ;Convert to BCD and Display 
209f			DO14: 
209f 0e 20		            LD      C,20H    ;Sound Routine 
20a1 69			            LD      L, C 
20a2 af			            XOR     A 
20a3			FS3: 
20a3 d3 01		            OUT     (01),A 
20a5 41			            LD      B,C 
20a6 10 fe		FS4:        DJNZ    FS4 
20a8 ee 80		            XOR     80H 
20aa 2d			            DEC     L 
20ab 20 f6		            JR      NZ,FS3 
20ad			 
20ad cd c9 20		            CALL    DOSCAN          ;Display the screen 
20b0			                                    ;Replace RST 20/NOP to LD A,I if JMON isn't used 
20b0 e7			            RST     20H             ;JMON No Wait Key handler  
20b1 00			            NOP                     ;Pad out for JMON only 
20b2			;            LD      A, I            ;Get Key (non JMON - Remove RST 20H and NOP) 
20b2 fe 12		            CP      12H             ;GO Key 
20b4 20 e9		            JR      NZ, DO14        ;Not GO, repeat Scan 
20b6 c3 00 20		            JP      START 
20b9			 
20b9			;Hex to Seven Segment lookup table 
20b9			DOSEGTBL:      
20b9 eb 28 cd ad 2e a7 e7 29 ef 2f	            DB      0EBH,28H,0CDH,0ADH,2EH,0A7H,0E7H,29H,0EFH,2FH 
20c3			 
20c3			OBSTICLES: 
20c3 e4 0f 81		            DB      0E4H, 0FH, 81H   ;Rock Low, Rock High and Gap 
20c6			PLAYER: 
20c6 01 04 80		            DB      01H, 04H, 80H    ;Dash High, Medium and Low 
20c9			             
20c9			DOSCAN: 
20c9 06 20		            LD      B, 20H          ;Segment Reference 
20cb 21 00 2d		            LD      HL, SCREEN      ;Set HL to Display Buffer 
20ce			DO7: 
20ce 7e			            LD      A, (HL)         ;Get Segment Value at HL 
20cf d3 02		            OUT     (02), A         ;Set on Segment 
20d1 78			            LD      A, B            ;Get Segment reference 
20d2 d3 01		            OUT     (01), A         ;Activate segment 
20d4 06 80		            LD      B, 80H          ;Segment delay 
20d6 10 fe		DO8:        DJNZ    DO8 
20d8 23			            INC     HL              ;Move to next location 
20d9 47			            LD      B, A            ;Save Segment reference 
20da af			            XOR     A               ;Clear A 
20db d3 01		            OUT     (01), A         ;Deactivate Segment 
20dd cb 08		            RRC     B               ;Move Segment Reference on to the Right 
20df 30 ed		            JR      NC, DO7         ;Scan next segment if more to do 
20e1 d3 02		            OUT     (02), A         ;Clear port 2 
20e3 c9			            RET 
20e4			 
20e4			;Convert HL and A to Seven Segment Display 
20e4			DOCON_HL: 
20e4 01 00 2d		            LD      BC,SCREEN           ;Location of display buffer 
20e7 7c			            LD      A,H                 ;Get high byte of Address 
20e8 cd ec 20		            CALL    DOCON_A               ;Convert A to Segment Hex 
20eb 7d			            LD      A,L                 ;Get low byte of Address 
20ec			DOCON_A: 
20ec f5			            PUSH    AF                  ;Save A to keep original value 
20ed 07			            RLCA                        ;Shift upper nibble to lower for masking 
20ee 07			            RLCA 
20ef 07			            RLCA 
20f0 07			            RLCA 
20f1 cd f5 20		            CALL    DOCON_NIBBLE          ;Convert Lower nibble to segment hex 
20f4 f1			            POP     AF                  ;Restore A 
20f5			 
20f5			DOCON_NIBBLE: 
20f5 e6 0f		            AND     0FH                 ;Only look at lower nibble for indexing 
20f7 11 b9 20		            LD      DE,DOSEGTBL         ;Reference Segment convert table 
20fa 83			            ADD     A,E                 ;Index table with A 
20fb 5f			            LD      E,A                 ;Update DE with index 
20fc 1a			            LD      A,(DE)              ;Look up table 
20fd 02			            LD      (BC),A              ;Save it to display buffer 
20fe 03			            INC     BC                  ;Increment buffer location 
20ff c9			            RET 
2100			 
# End of file /Users/slarti/Documents/TEC1x/TEC-1D-Stuff/code/games/Dodgy.z80
2100
